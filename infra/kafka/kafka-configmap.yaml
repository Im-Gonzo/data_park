apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-init-topics
  namespace: data-park
data:
  create-topics.sh: |
    #!/bin/bash
    
    # Wait for Kafka to be ready with better retry logic
    echo "Waiting for Kafka to be ready..."
    KAFKA_READY=false
    RETRIES=0
    MAX_RETRIES=30
    
    while [ $KAFKA_READY == false ] && [ $RETRIES -lt $MAX_RETRIES ]; do
      if kafka-topics --bootstrap-server kafka-0.kafka.data-park.svc.cluster.local:9093 --list &>/dev/null; then
        KAFKA_READY=true
        echo "Kafka is ready!"
      else
        RETRIES=$((RETRIES+1))
        echo "Waiting for Kafka... Attempt $RETRIES of $MAX_RETRIES"
        sleep 10
      fi
    done
    
    if [ $KAFKA_READY == false ]; then
      echo "Kafka not ready after $MAX_RETRIES attempts. Exiting."
      exit 1
    fi
    
    # Create topics
    echo "Creating topics..."
    kafka-topics --bootstrap-server kafka-0.kafka.data-park.svc.cluster.local:9093 --create --if-not-exists --topic customer-events --partitions 3 --replication-factor 1
    kafka-topics --bootstrap-server kafka-0.kafka.data-park.svc.cluster.local:9093 --create --if-not-exists --topic product-events --partitions 3 --replication-factor 1
    kafka-topics --bootstrap-server kafka-0.kafka.data-park.svc.cluster.local:9093 --create --if-not-exists --topic order-events --partitions 3 --replication-factor 1
    kafka-topics --bootstrap-server kafka-0.kafka.data-park.svc.cluster.local:9093 --create --if-not-exists --topic clickstream --partitions 3 --replication-factor 1
    
    # List topics
    echo "Listing topics:"
    kafka-topics --bootstrap-server kafka-0.kafka.data-park.svc.cluster.local:9093 --list
