apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: data-park
data:
  01-init.sql: |
    -- Create database for Airflow
    CREATE DATABASE airflow;
    
    -- Create database for data processing
    CREATE DATABASE datamart;
    
    -- Create schema for raw data
    \c datamart;
    CREATE SCHEMA raw;
    
    -- Create schema for processed data
    CREATE SCHEMA processed;
    
    -- Create example tables for raw data
    CREATE TABLE raw.customers (
      customer_id SERIAL PRIMARY KEY,
      first_name VARCHAR(100),
      last_name VARCHAR(100),
      email VARCHAR(200) UNIQUE,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    CREATE TABLE raw.products (
      product_id SERIAL PRIMARY KEY,
      name VARCHAR(200),
      description TEXT,
      price DECIMAL(10, 2),
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    CREATE TABLE raw.orders (
      order_id SERIAL PRIMARY KEY,
      customer_id INTEGER REFERENCES raw.customers(customer_id),
      order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      status VARCHAR(50) DEFAULT 'pending'
    );
    
    CREATE TABLE raw.order_items (
      order_item_id SERIAL PRIMARY KEY,
      order_id INTEGER REFERENCES raw.orders(order_id),
      product_id INTEGER REFERENCES raw.products(product_id),
      quantity INTEGER,
      price DECIMAL(10, 2)
    );
    
    -- Create roles for different services
    CREATE USER airflow WITH PASSWORD 'airflow';
    GRANT ALL PRIVILEGES ON DATABASE airflow TO airflow;
    
    CREATE USER spark WITH PASSWORD 'spark';
    GRANT ALL PRIVILEGES ON DATABASE datamart TO spark;
    GRANT ALL PRIVILEGES ON SCHEMA raw TO spark;
    GRANT ALL PRIVILEGES ON SCHEMA processed TO spark;
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA raw TO spark;
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA processed TO spark;
    
  02-airflow-metadata.sql: |
    \c airflow;
    
    -- Make airflow user the owner of the database
    ALTER DATABASE airflow OWNER TO airflow;
    
    -- Grant schema-level permissions
    GRANT ALL PRIVILEGES ON SCHEMA public TO airflow;
    GRANT CREATE ON SCHEMA public TO airflow;
    
    -- Grant table-level permissions (for future tables)
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO airflow;
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON SEQUENCES TO airflow;
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON FUNCTIONS TO airflow;
    
    -- Grant usage on public schema
    GRANT USAGE ON SCHEMA public TO airflow;
